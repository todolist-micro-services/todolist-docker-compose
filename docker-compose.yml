version: '3'

services:
  db:
    image: mysql:latest
    container_name: todolist_db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_DATABASE: todolistMicroServices
    volumes:
      - "../todolist-database/app/src/main/java/todolist/database/mysql/init.sql:/docker-entrypoint-initdb.d/1.sql"
    ports:
      - "3307:3306"
    networks:
      - back-net
  authentication_api:
    container_name: authentication_api
    build:
      context: ../todolist-authentification-api
      args:
        - SERVER_PORT=${AUTHENTIFICATION_API_PORT}
        - DB_URL=${DB_URL}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
        - SECRET_TOKEN=${SECRET_TOKEN}
        - EMAIL_SENDER=${EMAIL_SENDER}
        - EMAIL_PASSWORD=${EMAIL_PASSWORD}
    ports:
      - "${AUTHENTIFICATION_API_PORT}:${AUTHENTIFICATION_API_PORT}"
    depends_on:
      - db
    networks:
      - back-net
  user_api:
    container_name: user_api
    build:
      context: ../todolist-user-api
      args:
        - USER_API_PORT=${USER_API_PORT}
        - DB_URL=${DB_URL}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "${USER_API_PORT}:${USER_API_PORT}"
    depends_on:
      - db
      - authentication_api
    networks:
      - back-net
  project_api:
    container_name: project_api
    build:
      context: ../todolist-project-api
      args:
        - PROJECT_API_PORT=${PROJECT_API_PORT}
        - DB_URL=${DB_URL}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "${PROJECT_API_PORT}:${PROJECT_API_PORT}"
    depends_on:
      - db
      - authentication_api
    networks:
      - back-net
  event_api:
    container_name: event_api
    build:
      context: ../todolist-event-api
      args:
        - EVENT_API_PORT=${EVENT_API_PORT}
        - DB_URL=${DB_URL}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "${EVENT_API_PORT}:${EVENT_API_PORT}"
    depends_on:
      - db
      - authentication_api
    networks:
      - back-net
  list_api:
    container_name: list_api
    build:
      context: ../todolist-list-api
      args:
        - LIST_API_PORT=${LIST_API_PORT}
        - DB_URL=${DB_URL}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "${LIST_API_PORT}:${LIST_API_PORT}"
    depends_on:
      - db
      - authentication_api
    networks:
      - back-net
  task_api:
    container_name: task_api
    build:
      context: ../todolist-task-api
      args:
        - TASK_API_PORT=${TASK_API_PORT}
        - DB_URL=${DB_URL}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "${TASK_API_PORT}:${TASK_API_PORT}"
    depends_on:
      - db
      - authentication_api
    networks:
      - back-net
  gateway_api:
    container_name: gateway_api
    build:
      context: ../todolist-gateway-api
    ports:
      - "${GATEWAY_API_PORT}:${GATEWAY_API_PORT}"
    environment:
      - AUTHENTIFICATION_API=${AUTHENTIFICATION_API}
      - USER_API=${USER_API}
      - PROJECT_API=${PROJECT_API}
      - EVENT_API=${EVENT_API}
      - LIST_API=${LIST_API}
      - TASK_API=${TASK_API}
    networks:
      - back-net

networks:
  back-net:
    driver: bridge
